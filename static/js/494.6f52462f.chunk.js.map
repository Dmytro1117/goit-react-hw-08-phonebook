{"version":3,"file":"static/js/494.6f52462f.chunk.js","mappings":"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","sources":["components/Hooks/hooks.js","components/ContactsForm.jsx","components/Filter.jsx","components/ContactsList.jsx","views/Contacts.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contactsSlise';\nimport { contactsOperations } from '../../redux/contacts/contactsOperations';\n\nexport const useContacts = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(state => state.contacts.filter);\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoaging = useSelector(state => state.contacts.loader);\n  const error = useSelector(state => state.contacts.error);\n\n  const setFilter = value => {\n    dispatch(changeFilter(value));\n  };\n\n  const getContacts = () => {\n    dispatch(contactsOperations.getContacts());\n  };\n\n  const addContact = data => {\n    dispatch(contactsOperations.addContact(data));\n  };\n\n  const deleteContact = id => {\n    dispatch(contactsOperations.deleteContact(id));\n  };\n\n  return {\n    filter,\n    contacts,\n    isLoaging,\n    error,\n    setFilter,\n    getContacts,\n    addContact,\n    deleteContact,\n  };\n};\n","import style from '../Styles.module.css';\nimport { useState } from 'react';\nimport { useContacts } from './Hooks/hooks';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport PropTypes from 'prop-types';\n\nexport const ContacstForm = () => {\n  const { contacts, addContact } = useContacts();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n   \n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const enterContacts = contacts.some(\n      contact =>\n        (contact.name === name.toLowerCase() && contact.number === number) ||\n        contact.number === number\n    );\n    enterContacts\n      ? Notify.info(`${name} or ${number} is already in contacts`)\n      : addContact({ name, number });\n    !enterContacts && Notify.success(`${name} and ${number} is add`);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={style.cont__container}>\n      <form className={style.form__container} onSubmit={handleSubmit}>\n        <input\n          autoComplete='off'\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n        <input\n           autoComplete='off'\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"Phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"number number must be at least 5 digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n        <button type=\"submit \" className={style.form__btn}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\n ContacstForm.prototypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\n\nNotify.init({\n  width: '400px',\n  position:  'center-top', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\n  distance: '70px',\n  opacity: 1,\n  borderRadius: '3px',\n timeout: 2500,\n  fontAwesomeIconStyle: 'shadow', // 'basic' - 'shadow'\n  fontAwesomeIconSize: '35px',\n  fontSize: '20px',\n});","import style from '../Styles.module.css';\nimport { useContacts } from './Hooks/hooks';\n\nexport const Filter = () => {\n  const { filter, setFilter } = useContacts();\n  return (\n    <div className={style.cont__container}>\n      <h2 className={style.home__title}>Filter contacts by name:</h2>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Find contact by name\"\n        onChange={e => setFilter(e.target.value)}\n      />\n    </div>\n  );\n};\n","import style from '../Styles.module.css';\nimport { Loader } from '../components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useContacts } from './Hooks/hooks';\nimport { contactsOperations } from '../redux/contacts/contactsOperations';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../redux/auth/auth-selectors';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport PropTypes from 'prop-types';\n\nexport const ContactsList = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  const dispatch = useDispatch();\n  const { contacts, isLoaging, filter, deleteContact, setFilter } =\n    useContacts();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    if (contacts) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n\n  const filteredContacts = findContacts();\n\n  return (\n    <div>\n      <h2 className={style.home__title}>Contacts:</h2>\n      {isLoaging && <Loader />}\n      {isLoggedIn && (\n        <ul className={style.items__container}>\n          {contacts &&\n            filteredContacts.map(({ id, name, number }) => {\n              return (\n                <li className={style.item} key={id}>\n                  <h3 className={style.item__name}>{name}:</h3>\n                  <p className={style.item__name}>{number}</p>\n                  <button\n                    className={style.user__btn}\n                    type=\"button\"\n                    onClick={() => {\n                      deleteContact(id);\n                      Notify.failure(`${name} tel: ${number} is deleted`)\n                      setFilter('');\n                    }}\n                  >\n                    Delete\n                  </button>\n                </li>\n              );\n            })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\n\nContactsList.propTypes = {\n  deleteContact: PropTypes.func,\n  find: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n     }),\n  )\n};","import style from '../Styles.module.css';\nimport { ContacstForm } from '../components/ContactsForm';\nimport { Filter } from '../components/Filter';\nimport { ContactsList } from '../components/ContactsList';\n\nconst Contacts = () => {\n  return (\n    <div className={style.view__container}>\n      <h2 className={style.home__title}>\n        Enter a name and phone number:\n      </h2>\n      <ContacstForm />\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default Contacts;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["useContacts","dispatch","useDispatch","filter","useSelector","state","contacts","items","isLoaging","loader","error","setFilter","value","changeFilter","getContacts","contactsOperations","addContact","data","deleteContact","id","ContacstForm","useState","name","setName","number","setNumber","handleChange","event","target","handleSubmit","preventDefault","enterContacts","some","contact","toLowerCase","Notify","className","style","onSubmit","autoComplete","type","placeholder","pattern","title","required","onChange","prototypes","PropTypes","width","position","distance","opacity","borderRadius","timeout","fontAwesomeIconStyle","fontAwesomeIconSize","fontSize","Filter","e","ContactsList","isLoggedIn","authSelectors","useEffect","filteredContacts","normalizedFilter","includes","findContacts","Loader","map","onClick","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}